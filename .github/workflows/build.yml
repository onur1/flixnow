name: build

on: [pull_request, push]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.0.x]
    steps:
      - name: Set up NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up node modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-node${{ matrix.node-version }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-node${{ matrix.node-version }}-build-
            ${{ runner.OS }}-node${{ matrix.node-version }}-

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install
        env:
          PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
        run: |
          touch .npmrc
          echo "//npm.pkg.github.com/:_authToken=$PACKAGE_TOKEN" > .npmrc
          echo "@tetsuo:registry=https://npm.pkg.github.com" >> .npmrc
          npm install

      - name: Test
        run: npm run test

      - name: Build
        run: npm run build

      - name: Tag new version & release
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: |
          set -euxo pipefail
          next_version () {
            local current
            local impact
            local MAJOR
            local MINOR
            local PATCH
            local parts
            impact="$1"
            if [ -z "$1" ]
            then
              impact="patch"
            fi
            current=$(git tag | sort -r | grep "^[0-9]*\.[0-9]*\.[0-9]" | sort -t "." -k1,1nr -k2,2nr -k3,3nr | head -1 2> /dev/null) || true
            if [[ -z "$current" ]]; then
              current='0.0.0'
            fi
            parts=(${current//./ })
            MAJOR=${parts[0]}
            MINOR=${parts[1]}
            PATCH=${parts[2]}
            case "$impact" in
              major)
                ((MAJOR+=1))
                ;;
              minor)
                ((MINOR+=1))
                ;;
              patch)
                ((PATCH+=1))
                ;;
            esac
            echo "$MAJOR.$MINOR.$PATCH"
          }

          mkdir -p .release/server
          cp -R lib/server .release/server/lib
          cp -R README.md LICENSE .release/server
          cat package.json | \
            jq 'del(.devDependencies, .scripts, .private)' | \
            jq '. + { "publishConfig": { "registry":"https://npm.pkg.github.com/" } }' | \
            jq '. + { "name": "@tetsuo/flixbox-server", "main": "lib/server/index.js", "bin": "lib/server/index.js" }' \
            > .release/server/package.json

          echo '#!/usr/bin/env node' > .release/server/lib/server/tmp.js
          cat .release/server/lib/server/index.js >> .release/server/lib/server/tmp.js
          mv .release/server/lib/server/tmp.js .release/server/lib/server/index.js
          chmod +x .release/server/lib/server/index.js

          ls -LR .release/server
          cat .release/server/package.json

          mkdir -p dist
          cp public/flixbox.* dist/

          ls -LR dist

          touch .release/server/.npmrc
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > .release/server/.npmrc
          echo "@tetsuo:registry=https://npm.pkg.github.com" >> .release/server/.npmrc

          git fetch --all --tags

          git add dist

          cd .release/server

          commit=$(git rev-parse HEAD)
          if [[ -z "$(git describe --contains "$commit" 2>/dev/null)" ]]; then
            next="$(next_version "patch")"
            npm version "$next"
            npm publish --verbose

            git config user.name github-actions
            git config user.email github-actions@github.com

            git commit -m "Release $next"

            git tag "$next"
            git push origin "$next"

            exit 0
          fi

          exit 1
